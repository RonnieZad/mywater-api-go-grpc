// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: pkg/pb/application.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApproveRentApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ApproveRentApplicationRequest) Reset() {
	*x = ApproveRentApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveRentApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRentApplicationRequest) ProtoMessage() {}

func (x *ApproveRentApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRentApplicationRequest.ProtoReflect.Descriptor instead.
func (*ApproveRentApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{0}
}

func (x *ApproveRentApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ApproveRentApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApproveRentApplicationResponse) Reset() {
	*x = ApproveRentApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveRentApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRentApplicationResponse) ProtoMessage() {}

func (x *ApproveRentApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRentApplicationResponse.ProtoReflect.Descriptor instead.
func (*ApproveRentApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{1}
}

func (x *ApproveRentApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ApproveRentApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ApproveRentApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeclineRentApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeclineRentApplicationRequest) Reset() {
	*x = DeclineRentApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineRentApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineRentApplicationRequest) ProtoMessage() {}

func (x *DeclineRentApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineRentApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeclineRentApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{2}
}

func (x *DeclineRentApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeclineRentApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeclineRentApplicationResponse) Reset() {
	*x = DeclineRentApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclineRentApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineRentApplicationResponse) ProtoMessage() {}

func (x *DeclineRentApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineRentApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeclineRentApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{3}
}

func (x *DeclineRentApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeclineRentApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeclineRentApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MakeHouseFinanceApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                    string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId                string  `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	EarningWindowFrame        string  `protobuf:"bytes,3,opt,name=earning_window_frame,json=earningWindowFrame,proto3" json:"earning_window_frame,omitempty"`
	NextExpectedPayDate       string  `protobuf:"bytes,4,opt,name=next_expected_pay_date,json=nextExpectedPayDate,proto3" json:"next_expected_pay_date,omitempty"`
	IncomeRangeMinimum        float64 `protobuf:"fixed64,5,opt,name=income_range_minimum,json=incomeRangeMinimum,proto3" json:"income_range_minimum,omitempty"`
	IncomeRangeMaximum        float64 `protobuf:"fixed64,6,opt,name=income_range_maximum,json=incomeRangeMaximum,proto3" json:"income_range_maximum,omitempty"`
	RequestedAmount           float64 `protobuf:"fixed64,7,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	RequestedAmountPercentage float64 `protobuf:"fixed64,8,opt,name=requested_amount_percentage,json=requestedAmountPercentage,proto3" json:"requested_amount_percentage,omitempty"`
	AmountQualified           float64 `protobuf:"fixed64,9,opt,name=amount_qualified,json=amountQualified,proto3" json:"amount_qualified,omitempty"`
	PaybackInterest           float64 `protobuf:"fixed64,10,opt,name=payback_interest,json=paybackInterest,proto3" json:"payback_interest,omitempty"`
	InterestAmount            float64 `protobuf:"fixed64,11,opt,name=interest_amount,json=interestAmount,proto3" json:"interest_amount,omitempty"`
	RentFinancePeriod         string  `protobuf:"bytes,12,opt,name=rent_finance_period,json=rentFinancePeriod,proto3" json:"rent_finance_period,omitempty"`
	ApprovalStatus            bool    `protobuf:"varint,13,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"`
	PaymentSentToLandlord     bool    `protobuf:"varint,14,opt,name=payment_sent_to_landlord,json=paymentSentToLandlord,proto3" json:"payment_sent_to_landlord,omitempty"`
	ApprovedBy                string  `protobuf:"bytes,15,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
}

func (x *MakeHouseFinanceApplicationRequest) Reset() {
	*x = MakeHouseFinanceApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeHouseFinanceApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeHouseFinanceApplicationRequest) ProtoMessage() {}

func (x *MakeHouseFinanceApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeHouseFinanceApplicationRequest.ProtoReflect.Descriptor instead.
func (*MakeHouseFinanceApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{4}
}

func (x *MakeHouseFinanceApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MakeHouseFinanceApplicationRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *MakeHouseFinanceApplicationRequest) GetEarningWindowFrame() string {
	if x != nil {
		return x.EarningWindowFrame
	}
	return ""
}

func (x *MakeHouseFinanceApplicationRequest) GetNextExpectedPayDate() string {
	if x != nil {
		return x.NextExpectedPayDate
	}
	return ""
}

func (x *MakeHouseFinanceApplicationRequest) GetIncomeRangeMinimum() float64 {
	if x != nil {
		return x.IncomeRangeMinimum
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetIncomeRangeMaximum() float64 {
	if x != nil {
		return x.IncomeRangeMaximum
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetRequestedAmount() float64 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetRequestedAmountPercentage() float64 {
	if x != nil {
		return x.RequestedAmountPercentage
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetAmountQualified() float64 {
	if x != nil {
		return x.AmountQualified
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetPaybackInterest() float64 {
	if x != nil {
		return x.PaybackInterest
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetInterestAmount() float64 {
	if x != nil {
		return x.InterestAmount
	}
	return 0
}

func (x *MakeHouseFinanceApplicationRequest) GetRentFinancePeriod() string {
	if x != nil {
		return x.RentFinancePeriod
	}
	return ""
}

func (x *MakeHouseFinanceApplicationRequest) GetApprovalStatus() bool {
	if x != nil {
		return x.ApprovalStatus
	}
	return false
}

func (x *MakeHouseFinanceApplicationRequest) GetPaymentSentToLandlord() bool {
	if x != nil {
		return x.PaymentSentToLandlord
	}
	return false
}

func (x *MakeHouseFinanceApplicationRequest) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

type MakeHouseFinanceApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MakeHouseFinanceApplicationResponse) Reset() {
	*x = MakeHouseFinanceApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeHouseFinanceApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeHouseFinanceApplicationResponse) ProtoMessage() {}

func (x *MakeHouseFinanceApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeHouseFinanceApplicationResponse.ProtoReflect.Descriptor instead.
func (*MakeHouseFinanceApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{5}
}

func (x *MakeHouseFinanceApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MakeHouseFinanceApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MakeHouseFinanceApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MakeHouseFinanceApplicationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMakeHouseFinanceApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListMakeHouseFinanceApplicationRequest) Reset() {
	*x = ListMakeHouseFinanceApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMakeHouseFinanceApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMakeHouseFinanceApplicationRequest) ProtoMessage() {}

func (x *ListMakeHouseFinanceApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMakeHouseFinanceApplicationRequest.ProtoReflect.Descriptor instead.
func (*ListMakeHouseFinanceApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{6}
}

func (x *ListMakeHouseFinanceApplicationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMakeHouseFinanceApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // repeated Property properties = 4;
}

func (x *ListMakeHouseFinanceApplicationResponse) Reset() {
	*x = ListMakeHouseFinanceApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMakeHouseFinanceApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMakeHouseFinanceApplicationResponse) ProtoMessage() {}

func (x *ListMakeHouseFinanceApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMakeHouseFinanceApplicationResponse.ProtoReflect.Descriptor instead.
func (*ListMakeHouseFinanceApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{7}
}

func (x *ListMakeHouseFinanceApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListMakeHouseFinanceApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ListMakeHouseFinanceApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FindOneMakeHouseFinanceApplicationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string  `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price      float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *FindOneMakeHouseFinanceApplicationData) Reset() {
	*x = FindOneMakeHouseFinanceApplicationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneMakeHouseFinanceApplicationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneMakeHouseFinanceApplicationData) ProtoMessage() {}

func (x *FindOneMakeHouseFinanceApplicationData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneMakeHouseFinanceApplicationData.ProtoReflect.Descriptor instead.
func (*FindOneMakeHouseFinanceApplicationData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{8}
}

func (x *FindOneMakeHouseFinanceApplicationData) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *FindOneMakeHouseFinanceApplicationData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindOneMakeHouseFinanceApplicationData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type FindOneMakeHouseFinanceApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindOneMakeHouseFinanceApplicationRequest) Reset() {
	*x = FindOneMakeHouseFinanceApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneMakeHouseFinanceApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneMakeHouseFinanceApplicationRequest) ProtoMessage() {}

func (x *FindOneMakeHouseFinanceApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneMakeHouseFinanceApplicationRequest.ProtoReflect.Descriptor instead.
func (*FindOneMakeHouseFinanceApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{9}
}

func (x *FindOneMakeHouseFinanceApplicationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindOneMakeHouseFinanceApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64                                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string                                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *FindOneMakeHouseFinanceApplicationData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FindOneMakeHouseFinanceApplicationResponse) Reset() {
	*x = FindOneMakeHouseFinanceApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneMakeHouseFinanceApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneMakeHouseFinanceApplicationResponse) ProtoMessage() {}

func (x *FindOneMakeHouseFinanceApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneMakeHouseFinanceApplicationResponse.ProtoReflect.Descriptor instead.
func (*FindOneMakeHouseFinanceApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{10}
}

func (x *FindOneMakeHouseFinanceApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FindOneMakeHouseFinanceApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FindOneMakeHouseFinanceApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FindOneMakeHouseFinanceApplicationResponse) GetData() *FindOneMakeHouseFinanceApplicationData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MakeTourRequestApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId      string `protobuf:"bytes,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	UserId          string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReservationType int64  `protobuf:"varint,3,opt,name=reservation_type,json=reservationType,proto3" json:"reservation_type,omitempty"`
	AppointmentDate string `protobuf:"bytes,4,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`
	PaymentStatus   bool   `protobuf:"varint,5,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
}

func (x *MakeTourRequestApplicationRequest) Reset() {
	*x = MakeTourRequestApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeTourRequestApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeTourRequestApplicationRequest) ProtoMessage() {}

func (x *MakeTourRequestApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeTourRequestApplicationRequest.ProtoReflect.Descriptor instead.
func (*MakeTourRequestApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{11}
}

func (x *MakeTourRequestApplicationRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *MakeTourRequestApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MakeTourRequestApplicationRequest) GetReservationType() int64 {
	if x != nil {
		return x.ReservationType
	}
	return 0
}

func (x *MakeTourRequestApplicationRequest) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *MakeTourRequestApplicationRequest) GetPaymentStatus() bool {
	if x != nil {
		return x.PaymentStatus
	}
	return false
}

type MakeTourRequestApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MakeTourRequestApplicationResponse) Reset() {
	*x = MakeTourRequestApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeTourRequestApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeTourRequestApplicationResponse) ProtoMessage() {}

func (x *MakeTourRequestApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeTourRequestApplicationResponse.ProtoReflect.Descriptor instead.
func (*MakeTourRequestApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{12}
}

func (x *MakeTourRequestApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MakeTourRequestApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MakeTourRequestApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MakeTourRequestApplicationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RentFinancingRequestApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                    string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId                string  `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	EarningWindowFrame        string  `protobuf:"bytes,3,opt,name=earning_window_frame,json=earningWindowFrame,proto3" json:"earning_window_frame,omitempty"`
	NextExpectedPayDate       string  `protobuf:"bytes,4,opt,name=next_expected_pay_date,json=nextExpectedPayDate,proto3" json:"next_expected_pay_date,omitempty"`
	IncomeRangeMinimum        float64 `protobuf:"fixed64,5,opt,name=income_range_minimum,json=incomeRangeMinimum,proto3" json:"income_range_minimum,omitempty"`
	IncomeRangeMaximum        float64 `protobuf:"fixed64,6,opt,name=income_range_maximum,json=incomeRangeMaximum,proto3" json:"income_range_maximum,omitempty"`
	RequestedAmount           float64 `protobuf:"fixed64,7,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	RequestedAmountPercentage float64 `protobuf:"fixed64,8,opt,name=requested_amount_percentage,json=requestedAmountPercentage,proto3" json:"requested_amount_percentage,omitempty"`
	AmountQualified           float64 `protobuf:"fixed64,9,opt,name=amount_qualified,json=amountQualified,proto3" json:"amount_qualified,omitempty"`
	PaybackInterest           float64 `protobuf:"fixed64,10,opt,name=payback_interest,json=paybackInterest,proto3" json:"payback_interest,omitempty"`
	InterestAmount            float64 `protobuf:"fixed64,11,opt,name=interest_amount,json=interestAmount,proto3" json:"interest_amount,omitempty"`
	RentFinancePeriod         int32   `protobuf:"varint,12,opt,name=rent_finance_period,json=rentFinancePeriod,proto3" json:"rent_finance_period,omitempty"`
	ApprovalStatus            bool    `protobuf:"varint,13,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"`
	ApprovedBy                string  `protobuf:"bytes,14,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
}

func (x *RentFinancingRequestApplicationRequest) Reset() {
	*x = RentFinancingRequestApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentFinancingRequestApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentFinancingRequestApplicationRequest) ProtoMessage() {}

func (x *RentFinancingRequestApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentFinancingRequestApplicationRequest.ProtoReflect.Descriptor instead.
func (*RentFinancingRequestApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{13}
}

func (x *RentFinancingRequestApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RentFinancingRequestApplicationRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *RentFinancingRequestApplicationRequest) GetEarningWindowFrame() string {
	if x != nil {
		return x.EarningWindowFrame
	}
	return ""
}

func (x *RentFinancingRequestApplicationRequest) GetNextExpectedPayDate() string {
	if x != nil {
		return x.NextExpectedPayDate
	}
	return ""
}

func (x *RentFinancingRequestApplicationRequest) GetIncomeRangeMinimum() float64 {
	if x != nil {
		return x.IncomeRangeMinimum
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetIncomeRangeMaximum() float64 {
	if x != nil {
		return x.IncomeRangeMaximum
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetRequestedAmount() float64 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetRequestedAmountPercentage() float64 {
	if x != nil {
		return x.RequestedAmountPercentage
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetAmountQualified() float64 {
	if x != nil {
		return x.AmountQualified
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetPaybackInterest() float64 {
	if x != nil {
		return x.PaybackInterest
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetInterestAmount() float64 {
	if x != nil {
		return x.InterestAmount
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetRentFinancePeriod() int32 {
	if x != nil {
		return x.RentFinancePeriod
	}
	return 0
}

func (x *RentFinancingRequestApplicationRequest) GetApprovalStatus() bool {
	if x != nil {
		return x.ApprovalStatus
	}
	return false
}

func (x *RentFinancingRequestApplicationRequest) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

type RentFinancingRequestApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RentFinancingRequestApplicationResponse) Reset() {
	*x = RentFinancingRequestApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentFinancingRequestApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentFinancingRequestApplicationResponse) ProtoMessage() {}

func (x *RentFinancingRequestApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentFinancingRequestApplicationResponse.ProtoReflect.Descriptor instead.
func (*RentFinancingRequestApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{14}
}

func (x *RentFinancingRequestApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RentFinancingRequestApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RentFinancingRequestApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RentFinancingRequestApplicationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// get single user data
type GetUserRentApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRentApplicationRequest) Reset() {
	*x = GetUserRentApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRentApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRentApplicationRequest) ProtoMessage() {}

func (x *GetUserRentApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRentApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetUserRentApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserRentApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserRentApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserRentApplicationResponse) Reset() {
	*x = GetUserRentApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRentApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRentApplicationResponse) ProtoMessage() {}

func (x *GetUserRentApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRentApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetUserRentApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserRentApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserRentApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetUserRentApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserRentApplicationResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type PropertyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PropertyType            int32   `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	PropertyTypeText        string  `protobuf:"bytes,3,opt,name=property_type_text,json=propertyTypeText,proto3" json:"property_type_text,omitempty"`
	PropertyReference       string  `protobuf:"bytes,4,opt,name=property_reference,json=propertyReference,proto3" json:"property_reference,omitempty"`
	LocationText            string  `protobuf:"bytes,5,opt,name=location_text,json=locationText,proto3" json:"location_text,omitempty"`
	LocationCoordinatesLat  float64 `protobuf:"fixed64,6,opt,name=location_coordinates_lat,json=locationCoordinatesLat,proto3" json:"location_coordinates_lat,omitempty"`
	LocationCoordinatesLong float64 `protobuf:"fixed64,7,opt,name=location_coordinates_long,json=locationCoordinatesLong,proto3" json:"location_coordinates_long,omitempty"`
	RentPrice               float64 `protobuf:"fixed64,8,opt,name=rent_price,json=rentPrice,proto3" json:"rent_price,omitempty"`
	ServiceChargeFee        float64 `protobuf:"fixed64,9,opt,name=service_charge_fee,json=serviceChargeFee,proto3" json:"service_charge_fee,omitempty"`
	AgentFee                float64 `protobuf:"fixed64,10,opt,name=agent_fee,json=agentFee,proto3" json:"agent_fee,omitempty"`
	LegalFee                float64 `protobuf:"fixed64,11,opt,name=legal_fee,json=legalFee,proto3" json:"legal_fee,omitempty"`
	RentalDepositPeriod     int32   `protobuf:"varint,12,opt,name=rental_deposit_period,json=rentalDepositPeriod,proto3" json:"rental_deposit_period,omitempty"`
	Description             string  `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	FeatureBedrooms         int32   `protobuf:"varint,14,opt,name=feature_bedrooms,json=featureBedrooms,proto3" json:"feature_bedrooms,omitempty"`
	FeatureBathrooms        int32   `protobuf:"varint,15,opt,name=feature_bathrooms,json=featureBathrooms,proto3" json:"feature_bathrooms,omitempty"`
	FeatureSize             int32   `protobuf:"varint,16,opt,name=feature_size,json=featureSize,proto3" json:"feature_size,omitempty"`
	CoverPhoto              string  `protobuf:"bytes,17,opt,name=cover_photo,json=coverPhoto,proto3" json:"cover_photo,omitempty"`
	IsPropertyAvailable     bool    `protobuf:"varint,18,opt,name=is_property_available,json=isPropertyAvailable,proto3" json:"is_property_available,omitempty"`
	IsPropertyOnHold        bool    `protobuf:"varint,19,opt,name=is_property_on_hold,json=isPropertyOnHold,proto3" json:"is_property_on_hold,omitempty"`
	PropertyIsHeldBy        string  `protobuf:"bytes,20,opt,name=property_is_held_by,json=propertyIsHeldBy,proto3" json:"property_is_held_by,omitempty"`
	LeaseTerms              string  `protobuf:"bytes,21,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
}

func (x *PropertyInfo) Reset() {
	*x = PropertyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyInfo) ProtoMessage() {}

func (x *PropertyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyInfo.ProtoReflect.Descriptor instead.
func (*PropertyInfo) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{17}
}

func (x *PropertyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropertyInfo) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *PropertyInfo) GetPropertyTypeText() string {
	if x != nil {
		return x.PropertyTypeText
	}
	return ""
}

func (x *PropertyInfo) GetPropertyReference() string {
	if x != nil {
		return x.PropertyReference
	}
	return ""
}

func (x *PropertyInfo) GetLocationText() string {
	if x != nil {
		return x.LocationText
	}
	return ""
}

func (x *PropertyInfo) GetLocationCoordinatesLat() float64 {
	if x != nil {
		return x.LocationCoordinatesLat
	}
	return 0
}

func (x *PropertyInfo) GetLocationCoordinatesLong() float64 {
	if x != nil {
		return x.LocationCoordinatesLong
	}
	return 0
}

func (x *PropertyInfo) GetRentPrice() float64 {
	if x != nil {
		return x.RentPrice
	}
	return 0
}

func (x *PropertyInfo) GetServiceChargeFee() float64 {
	if x != nil {
		return x.ServiceChargeFee
	}
	return 0
}

func (x *PropertyInfo) GetAgentFee() float64 {
	if x != nil {
		return x.AgentFee
	}
	return 0
}

func (x *PropertyInfo) GetLegalFee() float64 {
	if x != nil {
		return x.LegalFee
	}
	return 0
}

func (x *PropertyInfo) GetRentalDepositPeriod() int32 {
	if x != nil {
		return x.RentalDepositPeriod
	}
	return 0
}

func (x *PropertyInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PropertyInfo) GetFeatureBedrooms() int32 {
	if x != nil {
		return x.FeatureBedrooms
	}
	return 0
}

func (x *PropertyInfo) GetFeatureBathrooms() int32 {
	if x != nil {
		return x.FeatureBathrooms
	}
	return 0
}

func (x *PropertyInfo) GetFeatureSize() int32 {
	if x != nil {
		return x.FeatureSize
	}
	return 0
}

func (x *PropertyInfo) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *PropertyInfo) GetIsPropertyAvailable() bool {
	if x != nil {
		return x.IsPropertyAvailable
	}
	return false
}

func (x *PropertyInfo) GetIsPropertyOnHold() bool {
	if x != nil {
		return x.IsPropertyOnHold
	}
	return false
}

func (x *PropertyInfo) GetPropertyIsHeldBy() string {
	if x != nil {
		return x.PropertyIsHeldBy
	}
	return ""
}

func (x *PropertyInfo) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhoneNumber             string   `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Name                    string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender                  string   `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	EmailAddress            string   `protobuf:"bytes,5,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	DateOfBirth             string   `protobuf:"bytes,6,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Role                    string   `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
	Nin                     string   `protobuf:"bytes,8,opt,name=nin,proto3" json:"nin,omitempty"`
	IsKycVerified           bool     `protobuf:"varint,9,opt,name=is_kyc_verified,json=isKycVerified,proto3" json:"is_kyc_verified,omitempty"`
	CreditScore             *float32 `protobuf:"fixed32,10,opt,name=credit_score,json=creditScore,proto3,oneof" json:"credit_score,omitempty"`
	IsFinanceWorthy         bool     `protobuf:"varint,11,opt,name=is_finance_worthy,json=isFinanceWorthy,proto3" json:"is_finance_worthy,omitempty"`
	WorkPlace               string   `protobuf:"bytes,12,opt,name=work_place,json=workPlace,proto3" json:"work_place,omitempty"`
	EmployerName            string   `protobuf:"bytes,13,opt,name=employer_name,json=employerName,proto3" json:"employer_name,omitempty"`
	SalaryScale             float32  `protobuf:"fixed32,14,opt,name=salary_scale,json=salaryScale,proto3" json:"salary_scale,omitempty"`
	ProfilePic              string   `protobuf:"bytes,15,opt,name=profile_pic,json=profilePic,proto3" json:"profile_pic,omitempty"`
	PaySlip                 string   `protobuf:"bytes,16,opt,name=pay_slip,json=paySlip,proto3" json:"pay_slip,omitempty"`
	EmployeeId              string   `protobuf:"bytes,17,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	NationalId              string   `protobuf:"bytes,18,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	IsAcountActive          bool     `protobuf:"varint,19,opt,name=is_acount_active,json=isAcountActive,proto3" json:"is_acount_active,omitempty"`
	IsPropertyPreferenceSet bool     `protobuf:"varint,20,opt,name=is_property_preference_set,json=isPropertyPreferenceSet,proto3" json:"is_property_preference_set,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{18}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserInfo) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserInfo) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *UserInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserInfo) GetNin() string {
	if x != nil {
		return x.Nin
	}
	return ""
}

func (x *UserInfo) GetIsKycVerified() bool {
	if x != nil {
		return x.IsKycVerified
	}
	return false
}

func (x *UserInfo) GetCreditScore() float32 {
	if x != nil && x.CreditScore != nil {
		return *x.CreditScore
	}
	return 0
}

func (x *UserInfo) GetIsFinanceWorthy() bool {
	if x != nil {
		return x.IsFinanceWorthy
	}
	return false
}

func (x *UserInfo) GetWorkPlace() string {
	if x != nil {
		return x.WorkPlace
	}
	return ""
}

func (x *UserInfo) GetEmployerName() string {
	if x != nil {
		return x.EmployerName
	}
	return ""
}

func (x *UserInfo) GetSalaryScale() float32 {
	if x != nil {
		return x.SalaryScale
	}
	return 0
}

func (x *UserInfo) GetProfilePic() string {
	if x != nil {
		return x.ProfilePic
	}
	return ""
}

func (x *UserInfo) GetPaySlip() string {
	if x != nil {
		return x.PaySlip
	}
	return ""
}

func (x *UserInfo) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *UserInfo) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *UserInfo) GetIsAcountActive() bool {
	if x != nil {
		return x.IsAcountActive
	}
	return false
}

func (x *UserInfo) GetIsPropertyPreferenceSet() bool {
	if x != nil {
		return x.IsPropertyPreferenceSet
	}
	return false
}

type HouseFinancingApplicationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplicationId             string        `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	UserId                    string        `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId                string        `protobuf:"bytes,4,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	PropertyName              string        `protobuf:"bytes,5,opt,name=property_name,json=propertyName,proto3" json:"property_name,omitempty"`
	UserInfo                  *UserInfo     `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	PropertyInfo              *PropertyInfo `protobuf:"bytes,7,opt,name=property_info,json=propertyInfo,proto3" json:"property_info,omitempty"`
	EarningWindowFrame        string        `protobuf:"bytes,8,opt,name=earning_window_frame,json=earningWindowFrame,proto3" json:"earning_window_frame,omitempty"`
	NextExpectedPayDate       string        `protobuf:"bytes,9,opt,name=next_expected_pay_date,json=nextExpectedPayDate,proto3" json:"next_expected_pay_date,omitempty"`
	IncomeRangeMinimum        float64       `protobuf:"fixed64,10,opt,name=income_range_minimum,json=incomeRangeMinimum,proto3" json:"income_range_minimum,omitempty"`
	IncomeRangeMaximum        float64       `protobuf:"fixed64,11,opt,name=income_range_maximum,json=incomeRangeMaximum,proto3" json:"income_range_maximum,omitempty"`
	RequestedAmount           float64       `protobuf:"fixed64,12,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	RequestedAmountPercentage float64       `protobuf:"fixed64,13,opt,name=requested_amount_percentage,json=requestedAmountPercentage,proto3" json:"requested_amount_percentage,omitempty"`
	AmountQualified           float64       `protobuf:"fixed64,14,opt,name=amount_qualified,json=amountQualified,proto3" json:"amount_qualified,omitempty"`
	PaybackInterest           float64       `protobuf:"fixed64,15,opt,name=payback_interest,json=paybackInterest,proto3" json:"payback_interest,omitempty"`
	InterestAmount            float64       `protobuf:"fixed64,16,opt,name=interest_amount,json=interestAmount,proto3" json:"interest_amount,omitempty"`
	OtherFeesAmount           float64       `protobuf:"fixed64,17,opt,name=other_fees_amount,json=otherFeesAmount,proto3" json:"other_fees_amount,omitempty"`
	TotalAmount               float64       `protobuf:"fixed64,18,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	AmountPaidBack            float64       `protobuf:"fixed64,19,opt,name=amount_paid_back,json=amountPaidBack,proto3" json:"amount_paid_back,omitempty"`
	RemainingBalance          float64       `protobuf:"fixed64,20,opt,name=remaining_balance,json=remainingBalance,proto3" json:"remaining_balance,omitempty"`
	MonthlyPayBack            float64       `protobuf:"fixed64,21,opt,name=monthly_pay_back,json=monthlyPayBack,proto3" json:"monthly_pay_back,omitempty"`
	RentFinancePeriod         int32         `protobuf:"varint,22,opt,name=rent_finance_period,json=rentFinancePeriod,proto3" json:"rent_finance_period,omitempty"`
	ApprovalStatus            bool          `protobuf:"varint,23,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"`
	ApprovedBy                string        `protobuf:"bytes,24,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	ApplicationDate           string        `protobuf:"bytes,25,opt,name=application_date,json=applicationDate,proto3" json:"application_date,omitempty"`
	IsLandlordPaid            *bool         `protobuf:"varint,26,opt,name=is_landlord_paid,json=isLandlordPaid,proto3,oneof" json:"is_landlord_paid,omitempty"`
	IsInstallmentOneMade      *bool         `protobuf:"varint,27,opt,name=is_installment_one_made,json=isInstallmentOneMade,proto3,oneof" json:"is_installment_one_made,omitempty"`
	IsInstallmentTwoMade      *bool         `protobuf:"varint,28,opt,name=is_installment_two_made,json=isInstallmentTwoMade,proto3,oneof" json:"is_installment_two_made,omitempty"`
	IsInstallmentThreeMade    *bool         `protobuf:"varint,29,opt,name=is_installment_three_made,json=isInstallmentThreeMade,proto3,oneof" json:"is_installment_three_made,omitempty"`
	InstallmentOneDate        *string       `protobuf:"bytes,30,opt,name=installment_one_date,json=installmentOneDate,proto3,oneof" json:"installment_one_date,omitempty"`
	InstallmentTwoDate        *string       `protobuf:"bytes,31,opt,name=installment_two_date,json=installmentTwoDate,proto3,oneof" json:"installment_two_date,omitempty"`
	InstallmentThreeDate      *string       `protobuf:"bytes,32,opt,name=installment_three_date,json=installmentThreeDate,proto3,oneof" json:"installment_three_date,omitempty"`
}

func (x *HouseFinancingApplicationData) Reset() {
	*x = HouseFinancingApplicationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseFinancingApplicationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseFinancingApplicationData) ProtoMessage() {}

func (x *HouseFinancingApplicationData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseFinancingApplicationData.ProtoReflect.Descriptor instead.
func (*HouseFinancingApplicationData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{19}
}

func (x *HouseFinancingApplicationData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetPropertyName() string {
	if x != nil {
		return x.PropertyName
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *HouseFinancingApplicationData) GetPropertyInfo() *PropertyInfo {
	if x != nil {
		return x.PropertyInfo
	}
	return nil
}

func (x *HouseFinancingApplicationData) GetEarningWindowFrame() string {
	if x != nil {
		return x.EarningWindowFrame
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetNextExpectedPayDate() string {
	if x != nil {
		return x.NextExpectedPayDate
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetIncomeRangeMinimum() float64 {
	if x != nil {
		return x.IncomeRangeMinimum
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetIncomeRangeMaximum() float64 {
	if x != nil {
		return x.IncomeRangeMaximum
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetRequestedAmount() float64 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetRequestedAmountPercentage() float64 {
	if x != nil {
		return x.RequestedAmountPercentage
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetAmountQualified() float64 {
	if x != nil {
		return x.AmountQualified
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetPaybackInterest() float64 {
	if x != nil {
		return x.PaybackInterest
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetInterestAmount() float64 {
	if x != nil {
		return x.InterestAmount
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetOtherFeesAmount() float64 {
	if x != nil {
		return x.OtherFeesAmount
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetAmountPaidBack() float64 {
	if x != nil {
		return x.AmountPaidBack
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetRemainingBalance() float64 {
	if x != nil {
		return x.RemainingBalance
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetMonthlyPayBack() float64 {
	if x != nil {
		return x.MonthlyPayBack
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetRentFinancePeriod() int32 {
	if x != nil {
		return x.RentFinancePeriod
	}
	return 0
}

func (x *HouseFinancingApplicationData) GetApprovalStatus() bool {
	if x != nil {
		return x.ApprovalStatus
	}
	return false
}

func (x *HouseFinancingApplicationData) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetApplicationDate() string {
	if x != nil {
		return x.ApplicationDate
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetIsLandlordPaid() bool {
	if x != nil && x.IsLandlordPaid != nil {
		return *x.IsLandlordPaid
	}
	return false
}

func (x *HouseFinancingApplicationData) GetIsInstallmentOneMade() bool {
	if x != nil && x.IsInstallmentOneMade != nil {
		return *x.IsInstallmentOneMade
	}
	return false
}

func (x *HouseFinancingApplicationData) GetIsInstallmentTwoMade() bool {
	if x != nil && x.IsInstallmentTwoMade != nil {
		return *x.IsInstallmentTwoMade
	}
	return false
}

func (x *HouseFinancingApplicationData) GetIsInstallmentThreeMade() bool {
	if x != nil && x.IsInstallmentThreeMade != nil {
		return *x.IsInstallmentThreeMade
	}
	return false
}

func (x *HouseFinancingApplicationData) GetInstallmentOneDate() string {
	if x != nil && x.InstallmentOneDate != nil {
		return *x.InstallmentOneDate
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetInstallmentTwoDate() string {
	if x != nil && x.InstallmentTwoDate != nil {
		return *x.InstallmentTwoDate
	}
	return ""
}

func (x *HouseFinancingApplicationData) GetInstallmentThreeDate() string {
	if x != nil && x.InstallmentThreeDate != nil {
		return *x.InstallmentThreeDate
	}
	return ""
}

type GetAllUserRentApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllUserRentApplicationsRequest) Reset() {
	*x = GetAllUserRentApplicationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserRentApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserRentApplicationsRequest) ProtoMessage() {}

func (x *GetAllUserRentApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserRentApplicationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllUserRentApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{20}
}

type GetAllUserRentApplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64                            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string                           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*HouseFinancingApplicationData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllUserRentApplicationsResponse) Reset() {
	*x = GetAllUserRentApplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllUserRentApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUserRentApplicationsResponse) ProtoMessage() {}

func (x *GetAllUserRentApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUserRentApplicationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllUserRentApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllUserRentApplicationsResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAllUserRentApplicationsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllUserRentApplicationsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllUserRentApplicationsResponse) GetData() []*HouseFinancingApplicationData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteRentApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteRentApplicationRequest) Reset() {
	*x = DeleteRentApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRentApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRentApplicationRequest) ProtoMessage() {}

func (x *DeleteRentApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRentApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteRentApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRentApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteRentApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteRentApplicationResponse) Reset() {
	*x = DeleteRentApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRentApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRentApplicationResponse) ProtoMessage() {}

func (x *DeleteRentApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRentApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeleteRentApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRentApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteRentApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteRentApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTourApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteTourApplicationRequest) Reset() {
	*x = DeleteTourApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTourApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTourApplicationRequest) ProtoMessage() {}

func (x *DeleteTourApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTourApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteTourApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteTourApplicationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteTourApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteTourApplicationResponse) Reset() {
	*x = DeleteTourApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_application_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTourApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTourApplicationResponse) ProtoMessage() {}

func (x *DeleteTourApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_application_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTourApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeleteTourApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_application_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteTourApplicationResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteTourApplicationResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteTourApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_pb_application_proto protoreflect.FileDescriptor

var file_pkg_pb_application_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x68, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x1d, 0x44, 0x65, 0x63,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc6, 0x05,
	0x0a, 0x22, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x18,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f,
	0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x4c, 0x61, 0x6e,
	0x64, 0x6c, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x22, 0x7d, 0x0a, 0x23, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x71, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x73, 0x0a, 0x26, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x6b,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3b, 0x0a, 0x29, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x2a, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d,
	0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xda, 0x01, 0x0a, 0x21, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x7c, 0x0a, 0x22, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x91, 0x05, 0x0a, 0x26, 0x52, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x30, 0x0a,
	0x14, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x70, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x27, 0x52, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x95, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xeb, 0x06, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x12,
	0x3a, 0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x65, 0x64, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62,
	0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x73,
	0x48, 0x65, 0x6c, 0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xb1, 0x05, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e,
	0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4b,
	0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x77, 0x6f, 0x72, 0x74, 0x68, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x74, 0x68, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x6c,
	0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x53, 0x6c, 0x69,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x41, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a,
	0x1a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x9b, 0x0d, 0x0a, 0x1d,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a,
	0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x46, 0x65,
	0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x69,
	0x64, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x61, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x6e, 0x74, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2d, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x69,
	0x73, 0x4c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x3a, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x14, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x17,
	0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x77, 0x6f, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52,
	0x14, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x77,
	0x6f, 0x4d, 0x61, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65,
	0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x16, 0x69,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65,
	0x65, 0x4d, 0x61, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x35, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x77, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x77, 0x6f, 0x44,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72,
	0x64, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x6d, 0x61,
	0x64, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x1c,
	0x0a, 0x1a, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x17, 0x0a, 0x15,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xac,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a,
	0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x37, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x9a, 0x0b, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x4d, 0x61, 0x6b,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97,
	0x01, 0x0a, 0x22, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x6e, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1a, 0x4d, 0x61, 0x6b, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x1f, 0x52, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_pb_application_proto_rawDescOnce sync.Once
	file_pkg_pb_application_proto_rawDescData = file_pkg_pb_application_proto_rawDesc
)

func file_pkg_pb_application_proto_rawDescGZIP() []byte {
	file_pkg_pb_application_proto_rawDescOnce.Do(func() {
		file_pkg_pb_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_application_proto_rawDescData)
	})
	return file_pkg_pb_application_proto_rawDescData
}

var file_pkg_pb_application_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_pkg_pb_application_proto_goTypes = []interface{}{
	(*ApproveRentApplicationRequest)(nil),              // 0: application.ApproveRentApplicationRequest
	(*ApproveRentApplicationResponse)(nil),             // 1: application.ApproveRentApplicationResponse
	(*DeclineRentApplicationRequest)(nil),              // 2: application.DeclineRentApplicationRequest
	(*DeclineRentApplicationResponse)(nil),             // 3: application.DeclineRentApplicationResponse
	(*MakeHouseFinanceApplicationRequest)(nil),         // 4: application.MakeHouseFinanceApplicationRequest
	(*MakeHouseFinanceApplicationResponse)(nil),        // 5: application.MakeHouseFinanceApplicationResponse
	(*ListMakeHouseFinanceApplicationRequest)(nil),     // 6: application.ListMakeHouseFinanceApplicationRequest
	(*ListMakeHouseFinanceApplicationResponse)(nil),    // 7: application.ListMakeHouseFinanceApplicationResponse
	(*FindOneMakeHouseFinanceApplicationData)(nil),     // 8: application.FindOneMakeHouseFinanceApplicationData
	(*FindOneMakeHouseFinanceApplicationRequest)(nil),  // 9: application.FindOneMakeHouseFinanceApplicationRequest
	(*FindOneMakeHouseFinanceApplicationResponse)(nil), // 10: application.FindOneMakeHouseFinanceApplicationResponse
	(*MakeTourRequestApplicationRequest)(nil),          // 11: application.MakeTourRequestApplicationRequest
	(*MakeTourRequestApplicationResponse)(nil),         // 12: application.MakeTourRequestApplicationResponse
	(*RentFinancingRequestApplicationRequest)(nil),     // 13: application.RentFinancingRequestApplicationRequest
	(*RentFinancingRequestApplicationResponse)(nil),    // 14: application.RentFinancingRequestApplicationResponse
	(*GetUserRentApplicationRequest)(nil),              // 15: application.GetUserRentApplicationRequest
	(*GetUserRentApplicationResponse)(nil),             // 16: application.GetUserRentApplicationResponse
	(*PropertyInfo)(nil),                               // 17: application.PropertyInfo
	(*UserInfo)(nil),                                   // 18: application.UserInfo
	(*HouseFinancingApplicationData)(nil),              // 19: application.HouseFinancingApplicationData
	(*GetAllUserRentApplicationsRequest)(nil),          // 20: application.GetAllUserRentApplicationsRequest
	(*GetAllUserRentApplicationsResponse)(nil),         // 21: application.GetAllUserRentApplicationsResponse
	(*DeleteRentApplicationRequest)(nil),               // 22: application.DeleteRentApplicationRequest
	(*DeleteRentApplicationResponse)(nil),              // 23: application.DeleteRentApplicationResponse
	(*DeleteTourApplicationRequest)(nil),               // 24: application.DeleteTourApplicationRequest
	(*DeleteTourApplicationResponse)(nil),              // 25: application.DeleteTourApplicationResponse
	(*structpb.Struct)(nil),                            // 26: google.protobuf.Struct
}
var file_pkg_pb_application_proto_depIdxs = []int32{
	8,  // 0: application.FindOneMakeHouseFinanceApplicationResponse.data:type_name -> application.FindOneMakeHouseFinanceApplicationData
	26, // 1: application.GetUserRentApplicationResponse.data:type_name -> google.protobuf.Struct
	18, // 2: application.HouseFinancingApplicationData.user_info:type_name -> application.UserInfo
	17, // 3: application.HouseFinancingApplicationData.property_info:type_name -> application.PropertyInfo
	19, // 4: application.GetAllUserRentApplicationsResponse.data:type_name -> application.HouseFinancingApplicationData
	4,  // 5: application.ApplicationService.MakeHouseFinanceApplication:input_type -> application.MakeHouseFinanceApplicationRequest
	6,  // 6: application.ApplicationService.ListMakeHouseFinanceApplication:input_type -> application.ListMakeHouseFinanceApplicationRequest
	9,  // 7: application.ApplicationService.FindOneMakeHouseFinanceApplication:input_type -> application.FindOneMakeHouseFinanceApplicationRequest
	11, // 8: application.ApplicationService.MakeTourRequestApplication:input_type -> application.MakeTourRequestApplicationRequest
	13, // 9: application.ApplicationService.RentFinancingRequestApplication:input_type -> application.RentFinancingRequestApplicationRequest
	15, // 10: application.ApplicationService.GetUserRentApplication:input_type -> application.GetUserRentApplicationRequest
	20, // 11: application.ApplicationService.GetAllUserRentApplications:input_type -> application.GetAllUserRentApplicationsRequest
	2,  // 12: application.ApplicationService.DeclineRentApplication:input_type -> application.DeclineRentApplicationRequest
	0,  // 13: application.ApplicationService.ApproveRentApplication:input_type -> application.ApproveRentApplicationRequest
	22, // 14: application.ApplicationService.DeleteRentApplication:input_type -> application.DeleteRentApplicationRequest
	24, // 15: application.ApplicationService.DeleteTourApplication:input_type -> application.DeleteTourApplicationRequest
	5,  // 16: application.ApplicationService.MakeHouseFinanceApplication:output_type -> application.MakeHouseFinanceApplicationResponse
	7,  // 17: application.ApplicationService.ListMakeHouseFinanceApplication:output_type -> application.ListMakeHouseFinanceApplicationResponse
	10, // 18: application.ApplicationService.FindOneMakeHouseFinanceApplication:output_type -> application.FindOneMakeHouseFinanceApplicationResponse
	12, // 19: application.ApplicationService.MakeTourRequestApplication:output_type -> application.MakeTourRequestApplicationResponse
	14, // 20: application.ApplicationService.RentFinancingRequestApplication:output_type -> application.RentFinancingRequestApplicationResponse
	16, // 21: application.ApplicationService.GetUserRentApplication:output_type -> application.GetUserRentApplicationResponse
	21, // 22: application.ApplicationService.GetAllUserRentApplications:output_type -> application.GetAllUserRentApplicationsResponse
	3,  // 23: application.ApplicationService.DeclineRentApplication:output_type -> application.DeclineRentApplicationResponse
	1,  // 24: application.ApplicationService.ApproveRentApplication:output_type -> application.ApproveRentApplicationResponse
	23, // 25: application.ApplicationService.DeleteRentApplication:output_type -> application.DeleteRentApplicationResponse
	25, // 26: application.ApplicationService.DeleteTourApplication:output_type -> application.DeleteTourApplicationResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_pb_application_proto_init() }
func file_pkg_pb_application_proto_init() {
	if File_pkg_pb_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveRentApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveRentApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineRentApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclineRentApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeHouseFinanceApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeHouseFinanceApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMakeHouseFinanceApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMakeHouseFinanceApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneMakeHouseFinanceApplicationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneMakeHouseFinanceApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneMakeHouseFinanceApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeTourRequestApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeTourRequestApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentFinancingRequestApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentFinancingRequestApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRentApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRentApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseFinancingApplicationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUserRentApplicationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllUserRentApplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRentApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRentApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTourApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_application_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTourApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_pb_application_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_pkg_pb_application_proto_msgTypes[19].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_application_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_application_proto_goTypes,
		DependencyIndexes: file_pkg_pb_application_proto_depIdxs,
		MessageInfos:      file_pkg_pb_application_proto_msgTypes,
	}.Build()
	File_pkg_pb_application_proto = out.File
	file_pkg_pb_application_proto_rawDesc = nil
	file_pkg_pb_application_proto_goTypes = nil
	file_pkg_pb_application_proto_depIdxs = nil
}
