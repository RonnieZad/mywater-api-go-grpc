// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.4
// source: pkg/pb/property.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PropertyType            int32                    `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	LocationText            string                   `protobuf:"bytes,3,opt,name=location_text,json=locationText,proto3" json:"location_text,omitempty"`
	LocationCoordinatesLat  float64                  `protobuf:"fixed64,4,opt,name=location_coordinates_lat,json=locationCoordinatesLat,proto3" json:"location_coordinates_lat,omitempty"`
	LocationCoordinatesLong float64                  `protobuf:"fixed64,5,opt,name=location_coordinates_long,json=locationCoordinatesLong,proto3" json:"location_coordinates_long,omitempty"`
	RentPrice               float64                  `protobuf:"fixed64,6,opt,name=rent_price,json=rentPrice,proto3" json:"rent_price,omitempty"`
	ServiceChargeFee        float64                  `protobuf:"fixed64,7,opt,name=service_charge_fee,json=serviceChargeFee,proto3" json:"service_charge_fee,omitempty"`
	AgentFee                float64                  `protobuf:"fixed64,8,opt,name=agent_fee,json=agentFee,proto3" json:"agent_fee,omitempty"`
	LegalFee                float64                  `protobuf:"fixed64,9,opt,name=legal_fee,json=legalFee,proto3" json:"legal_fee,omitempty"`
	RentalDepositPeriod     int32                    `protobuf:"varint,10,opt,name=rental_deposit_period,json=rentalDepositPeriod,proto3" json:"rental_deposit_period,omitempty"`
	Description             string                   `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	FeatureBedrooms         int32                    `protobuf:"varint,12,opt,name=feature_bedrooms,json=featureBedrooms,proto3" json:"feature_bedrooms,omitempty"`
	FeatureBathrooms        int32                    `protobuf:"varint,13,opt,name=feature_bathrooms,json=featureBathrooms,proto3" json:"feature_bathrooms,omitempty"`
	FeatureSize             int32                    `protobuf:"varint,14,opt,name=feature_size,json=featureSize,proto3" json:"feature_size,omitempty"`
	CoverPhoto              string                   `protobuf:"bytes,15,opt,name=cover_photo,json=coverPhoto,proto3" json:"cover_photo,omitempty"`
	PropertyAbout           *structpb.Struct         `protobuf:"bytes,16,opt,name=property_about,json=propertyAbout,proto3" json:"property_about,omitempty"`
	PropertyManagement      *structpb.Struct         `protobuf:"bytes,17,opt,name=property_management,json=propertyManagement,proto3" json:"property_management,omitempty"`
	PropertyNearbySchool    []*PropertyNearbySchool  `protobuf:"bytes,18,rep,name=property_nearby_school,json=propertyNearbySchool,proto3" json:"property_nearby_school,omitempty"`
	PropertyNeighbourhood   []*PropertyNeighbourhood `protobuf:"bytes,19,rep,name=property_neighbourhood,json=propertyNeighbourhood,proto3" json:"property_neighbourhood,omitempty"`
	PropertyImages          []*PropertyImages        `protobuf:"bytes,20,rep,name=property_images,json=propertyImages,proto3" json:"property_images,omitempty"`
	VideoPreview            string                   `protobuf:"bytes,21,opt,name=video_preview,json=videoPreview,proto3" json:"video_preview,omitempty"`
	LeaseTerms              string                   `protobuf:"bytes,22,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
}

func (x *AddPropertyRequest) Reset() {
	*x = AddPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPropertyRequest) ProtoMessage() {}

func (x *AddPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPropertyRequest.ProtoReflect.Descriptor instead.
func (*AddPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{0}
}

func (x *AddPropertyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddPropertyRequest) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *AddPropertyRequest) GetLocationText() string {
	if x != nil {
		return x.LocationText
	}
	return ""
}

func (x *AddPropertyRequest) GetLocationCoordinatesLat() float64 {
	if x != nil {
		return x.LocationCoordinatesLat
	}
	return 0
}

func (x *AddPropertyRequest) GetLocationCoordinatesLong() float64 {
	if x != nil {
		return x.LocationCoordinatesLong
	}
	return 0
}

func (x *AddPropertyRequest) GetRentPrice() float64 {
	if x != nil {
		return x.RentPrice
	}
	return 0
}

func (x *AddPropertyRequest) GetServiceChargeFee() float64 {
	if x != nil {
		return x.ServiceChargeFee
	}
	return 0
}

func (x *AddPropertyRequest) GetAgentFee() float64 {
	if x != nil {
		return x.AgentFee
	}
	return 0
}

func (x *AddPropertyRequest) GetLegalFee() float64 {
	if x != nil {
		return x.LegalFee
	}
	return 0
}

func (x *AddPropertyRequest) GetRentalDepositPeriod() int32 {
	if x != nil {
		return x.RentalDepositPeriod
	}
	return 0
}

func (x *AddPropertyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddPropertyRequest) GetFeatureBedrooms() int32 {
	if x != nil {
		return x.FeatureBedrooms
	}
	return 0
}

func (x *AddPropertyRequest) GetFeatureBathrooms() int32 {
	if x != nil {
		return x.FeatureBathrooms
	}
	return 0
}

func (x *AddPropertyRequest) GetFeatureSize() int32 {
	if x != nil {
		return x.FeatureSize
	}
	return 0
}

func (x *AddPropertyRequest) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *AddPropertyRequest) GetPropertyAbout() *structpb.Struct {
	if x != nil {
		return x.PropertyAbout
	}
	return nil
}

func (x *AddPropertyRequest) GetPropertyManagement() *structpb.Struct {
	if x != nil {
		return x.PropertyManagement
	}
	return nil
}

func (x *AddPropertyRequest) GetPropertyNearbySchool() []*PropertyNearbySchool {
	if x != nil {
		return x.PropertyNearbySchool
	}
	return nil
}

func (x *AddPropertyRequest) GetPropertyNeighbourhood() []*PropertyNeighbourhood {
	if x != nil {
		return x.PropertyNeighbourhood
	}
	return nil
}

func (x *AddPropertyRequest) GetPropertyImages() []*PropertyImages {
	if x != nil {
		return x.PropertyImages
	}
	return nil
}

func (x *AddPropertyRequest) GetVideoPreview() string {
	if x != nil {
		return x.VideoPreview
	}
	return ""
}

func (x *AddPropertyRequest) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

type AddPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddPropertyResponse) Reset() {
	*x = AddPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPropertyResponse) ProtoMessage() {}

func (x *AddPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPropertyResponse.ProtoReflect.Descriptor instead.
func (*AddPropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{1}
}

func (x *AddPropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddPropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddPropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddPropertyResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total      int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPages int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{2}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Pagination) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type ListPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListPropertyRequest) Reset() {
	*x = ListPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPropertyRequest) ProtoMessage() {}

func (x *ListPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPropertyRequest.ProtoReflect.Descriptor instead.
func (*ListPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{3}
}

func (x *ListPropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListPropertyRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPropertyRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int64       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error      string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Properties []*Property `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *ListPropertyResponse) Reset() {
	*x = ListPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPropertyResponse) ProtoMessage() {}

func (x *ListPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPropertyResponse.ProtoReflect.Descriptor instead.
func (*ListPropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{4}
}

func (x *ListPropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListPropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ListPropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPropertyResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPropertyResponse) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

// FindOne
type FindOneData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PropertyType            int32                    `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	PropertyTypeText        string                   `protobuf:"bytes,3,opt,name=property_type_text,json=propertyTypeText,proto3" json:"property_type_text,omitempty"`
	PropertyReference       string                   `protobuf:"bytes,4,opt,name=property_reference,json=propertyReference,proto3" json:"property_reference,omitempty"`
	LocationText            string                   `protobuf:"bytes,5,opt,name=location_text,json=locationText,proto3" json:"location_text,omitempty"`
	LocationCoordinatesLat  float64                  `protobuf:"fixed64,6,opt,name=location_coordinates_lat,json=locationCoordinatesLat,proto3" json:"location_coordinates_lat,omitempty"`
	LocationCoordinatesLong float64                  `protobuf:"fixed64,7,opt,name=location_coordinates_long,json=locationCoordinatesLong,proto3" json:"location_coordinates_long,omitempty"`
	RentPrice               float64                  `protobuf:"fixed64,8,opt,name=rent_price,json=rentPrice,proto3" json:"rent_price,omitempty"`
	ServiceChargeFee        float64                  `protobuf:"fixed64,9,opt,name=service_charge_fee,json=serviceChargeFee,proto3" json:"service_charge_fee,omitempty"`
	AgentFee                float64                  `protobuf:"fixed64,10,opt,name=agent_fee,json=agentFee,proto3" json:"agent_fee,omitempty"`
	LegalFee                float64                  `protobuf:"fixed64,11,opt,name=legal_fee,json=legalFee,proto3" json:"legal_fee,omitempty"`
	RentalDepositPeriod     int32                    `protobuf:"varint,12,opt,name=rental_deposit_period,json=rentalDepositPeriod,proto3" json:"rental_deposit_period,omitempty"`
	Description             string                   `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	FeatureBedrooms         int32                    `protobuf:"varint,14,opt,name=feature_bedrooms,json=featureBedrooms,proto3" json:"feature_bedrooms,omitempty"`
	FeatureBathrooms        int32                    `protobuf:"varint,15,opt,name=feature_bathrooms,json=featureBathrooms,proto3" json:"feature_bathrooms,omitempty"`
	FeatureSize             int32                    `protobuf:"varint,16,opt,name=feature_size,json=featureSize,proto3" json:"feature_size,omitempty"`
	CoverPhoto              string                   `protobuf:"bytes,17,opt,name=cover_photo,json=coverPhoto,proto3" json:"cover_photo,omitempty"`
	PropertyAbout           *structpb.Struct         `protobuf:"bytes,18,opt,name=property_about,json=propertyAbout,proto3" json:"property_about,omitempty"`
	PropertyManagement      *structpb.Struct         `protobuf:"bytes,19,opt,name=property_management,json=propertyManagement,proto3" json:"property_management,omitempty"`
	PropertyNearbySchool    []*PropertyNearbySchool  `protobuf:"bytes,20,rep,name=property_nearby_school,json=propertyNearbySchool,proto3" json:"property_nearby_school,omitempty"`
	PropertyNeighbourhood   []*PropertyNeighbourhood `protobuf:"bytes,21,rep,name=property_neighbourhood,json=propertyNeighbourhood,proto3" json:"property_neighbourhood,omitempty"`
	PropertyImages          []*PropertyImages        `protobuf:"bytes,22,rep,name=property_images,json=propertyImages,proto3" json:"property_images,omitempty"`
	VideoPreview            string                   `protobuf:"bytes,23,opt,name=video_preview,json=videoPreview,proto3" json:"video_preview,omitempty"`
	PropertyId              string                   `protobuf:"bytes,24,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	IsPropertyAvailable     bool                     `protobuf:"varint,25,opt,name=is_property_available,json=isPropertyAvailable,proto3" json:"is_property_available,omitempty"`
	IsPropertyOnHold        bool                     `protobuf:"varint,26,opt,name=is_property_on_hold,json=isPropertyOnHold,proto3" json:"is_property_on_hold,omitempty"`
	PropertyIsHeldBy        string                   `protobuf:"bytes,27,opt,name=property_is_held_by,json=propertyIsHeldBy,proto3" json:"property_is_held_by,omitempty"`
	LeaseTerms              string                   `protobuf:"bytes,28,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
}

func (x *FindOneData) Reset() {
	*x = FindOneData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneData) ProtoMessage() {}

func (x *FindOneData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneData.ProtoReflect.Descriptor instead.
func (*FindOneData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{5}
}

func (x *FindOneData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindOneData) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *FindOneData) GetPropertyTypeText() string {
	if x != nil {
		return x.PropertyTypeText
	}
	return ""
}

func (x *FindOneData) GetPropertyReference() string {
	if x != nil {
		return x.PropertyReference
	}
	return ""
}

func (x *FindOneData) GetLocationText() string {
	if x != nil {
		return x.LocationText
	}
	return ""
}

func (x *FindOneData) GetLocationCoordinatesLat() float64 {
	if x != nil {
		return x.LocationCoordinatesLat
	}
	return 0
}

func (x *FindOneData) GetLocationCoordinatesLong() float64 {
	if x != nil {
		return x.LocationCoordinatesLong
	}
	return 0
}

func (x *FindOneData) GetRentPrice() float64 {
	if x != nil {
		return x.RentPrice
	}
	return 0
}

func (x *FindOneData) GetServiceChargeFee() float64 {
	if x != nil {
		return x.ServiceChargeFee
	}
	return 0
}

func (x *FindOneData) GetAgentFee() float64 {
	if x != nil {
		return x.AgentFee
	}
	return 0
}

func (x *FindOneData) GetLegalFee() float64 {
	if x != nil {
		return x.LegalFee
	}
	return 0
}

func (x *FindOneData) GetRentalDepositPeriod() int32 {
	if x != nil {
		return x.RentalDepositPeriod
	}
	return 0
}

func (x *FindOneData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FindOneData) GetFeatureBedrooms() int32 {
	if x != nil {
		return x.FeatureBedrooms
	}
	return 0
}

func (x *FindOneData) GetFeatureBathrooms() int32 {
	if x != nil {
		return x.FeatureBathrooms
	}
	return 0
}

func (x *FindOneData) GetFeatureSize() int32 {
	if x != nil {
		return x.FeatureSize
	}
	return 0
}

func (x *FindOneData) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *FindOneData) GetPropertyAbout() *structpb.Struct {
	if x != nil {
		return x.PropertyAbout
	}
	return nil
}

func (x *FindOneData) GetPropertyManagement() *structpb.Struct {
	if x != nil {
		return x.PropertyManagement
	}
	return nil
}

func (x *FindOneData) GetPropertyNearbySchool() []*PropertyNearbySchool {
	if x != nil {
		return x.PropertyNearbySchool
	}
	return nil
}

func (x *FindOneData) GetPropertyNeighbourhood() []*PropertyNeighbourhood {
	if x != nil {
		return x.PropertyNeighbourhood
	}
	return nil
}

func (x *FindOneData) GetPropertyImages() []*PropertyImages {
	if x != nil {
		return x.PropertyImages
	}
	return nil
}

func (x *FindOneData) GetVideoPreview() string {
	if x != nil {
		return x.VideoPreview
	}
	return ""
}

func (x *FindOneData) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *FindOneData) GetIsPropertyAvailable() bool {
	if x != nil {
		return x.IsPropertyAvailable
	}
	return false
}

func (x *FindOneData) GetIsPropertyOnHold() bool {
	if x != nil {
		return x.IsPropertyOnHold
	}
	return false
}

func (x *FindOneData) GetPropertyIsHeldBy() string {
	if x != nil {
		return x.PropertyIsHeldBy
	}
	return ""
}

func (x *FindOneData) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

type FindOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindOneRequest) Reset() {
	*x = FindOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneRequest) ProtoMessage() {}

func (x *FindOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneRequest.ProtoReflect.Descriptor instead.
func (*FindOneRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{6}
}

func (x *FindOneRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *FindOneData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FindOneResponse) Reset() {
	*x = FindOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOneResponse) ProtoMessage() {}

func (x *FindOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOneResponse.ProtoReflect.Descriptor instead.
func (*FindOneResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{7}
}

func (x *FindOneResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FindOneResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FindOneResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FindOneResponse) GetData() *FindOneData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PropertyNearbySchool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level       int64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	LevelText   string `protobuf:"bytes,3,opt,name=level_text,json=levelText,proto3" json:"level_text,omitempty"`
	Grades      string `protobuf:"bytes,4,opt,name=grades,proto3" json:"grades,omitempty"`
	Distance    string `protobuf:"bytes,5,opt,name=distance,proto3" json:"distance,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	PropertyId  string `protobuf:"bytes,7,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *PropertyNearbySchool) Reset() {
	*x = PropertyNearbySchool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyNearbySchool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyNearbySchool) ProtoMessage() {}

func (x *PropertyNearbySchool) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyNearbySchool.ProtoReflect.Descriptor instead.
func (*PropertyNearbySchool) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{8}
}

func (x *PropertyNearbySchool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropertyNearbySchool) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PropertyNearbySchool) GetLevelText() string {
	if x != nil {
		return x.LevelText
	}
	return ""
}

func (x *PropertyNearbySchool) GetGrades() string {
	if x != nil {
		return x.Grades
	}
	return ""
}

func (x *PropertyNearbySchool) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

func (x *PropertyNearbySchool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PropertyNearbySchool) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type PropertyNeighbourhood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        int64   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	TypeText    string  `protobuf:"bytes,3,opt,name=type_text,json=typeText,proto3" json:"type_text,omitempty"`
	Distance    float64 `protobuf:"fixed64,4,opt,name=distance,proto3" json:"distance,omitempty"`
	Description string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	PropertyId  string  `protobuf:"bytes,6,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *PropertyNeighbourhood) Reset() {
	*x = PropertyNeighbourhood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyNeighbourhood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyNeighbourhood) ProtoMessage() {}

func (x *PropertyNeighbourhood) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyNeighbourhood.ProtoReflect.Descriptor instead.
func (*PropertyNeighbourhood) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{9}
}

func (x *PropertyNeighbourhood) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PropertyNeighbourhood) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PropertyNeighbourhood) GetTypeText() string {
	if x != nil {
		return x.TypeText
	}
	return ""
}

func (x *PropertyNeighbourhood) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *PropertyNeighbourhood) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PropertyNeighbourhood) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type PropertyImages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *PropertyImages) Reset() {
	*x = PropertyImages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyImages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyImages) ProtoMessage() {}

func (x *PropertyImages) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyImages.ProtoReflect.Descriptor instead.
func (*PropertyImages) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{10}
}

func (x *PropertyImages) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PropertyImages) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PropertyType            int32                    `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	PropertyTypeText        string                   `protobuf:"bytes,3,opt,name=property_type_text,json=propertyTypeText,proto3" json:"property_type_text,omitempty"`
	PropertyReference       string                   `protobuf:"bytes,4,opt,name=property_reference,json=propertyReference,proto3" json:"property_reference,omitempty"`
	LocationText            string                   `protobuf:"bytes,5,opt,name=location_text,json=locationText,proto3" json:"location_text,omitempty"`
	LocationCoordinatesLat  float64                  `protobuf:"fixed64,6,opt,name=location_coordinates_lat,json=locationCoordinatesLat,proto3" json:"location_coordinates_lat,omitempty"`
	LocationCoordinatesLong float64                  `protobuf:"fixed64,7,opt,name=location_coordinates_long,json=locationCoordinatesLong,proto3" json:"location_coordinates_long,omitempty"`
	RentPrice               float64                  `protobuf:"fixed64,8,opt,name=rent_price,json=rentPrice,proto3" json:"rent_price,omitempty"`
	ServiceChargeFee        float64                  `protobuf:"fixed64,9,opt,name=service_charge_fee,json=serviceChargeFee,proto3" json:"service_charge_fee,omitempty"`
	AgentFee                float64                  `protobuf:"fixed64,10,opt,name=agent_fee,json=agentFee,proto3" json:"agent_fee,omitempty"`
	LegalFee                float64                  `protobuf:"fixed64,11,opt,name=legal_fee,json=legalFee,proto3" json:"legal_fee,omitempty"`
	RentalDepositPeriod     int32                    `protobuf:"varint,12,opt,name=rental_deposit_period,json=rentalDepositPeriod,proto3" json:"rental_deposit_period,omitempty"`
	Description             string                   `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	FeatureBedrooms         int32                    `protobuf:"varint,14,opt,name=feature_bedrooms,json=featureBedrooms,proto3" json:"feature_bedrooms,omitempty"`
	FeatureBathrooms        int32                    `protobuf:"varint,15,opt,name=feature_bathrooms,json=featureBathrooms,proto3" json:"feature_bathrooms,omitempty"`
	FeatureSize             int32                    `protobuf:"varint,16,opt,name=feature_size,json=featureSize,proto3" json:"feature_size,omitempty"`
	CoverPhoto              string                   `protobuf:"bytes,17,opt,name=cover_photo,json=coverPhoto,proto3" json:"cover_photo,omitempty"`
	PropertyAbout           *structpb.Struct         `protobuf:"bytes,18,opt,name=property_about,json=propertyAbout,proto3" json:"property_about,omitempty"`
	PropertyManagement      *structpb.Struct         `protobuf:"bytes,19,opt,name=property_management,json=propertyManagement,proto3" json:"property_management,omitempty"`
	PropertyNearbySchool    []*PropertyNearbySchool  `protobuf:"bytes,20,rep,name=property_nearby_school,json=propertyNearbySchool,proto3" json:"property_nearby_school,omitempty"`
	PropertyNeighbourhood   []*PropertyNeighbourhood `protobuf:"bytes,21,rep,name=property_neighbourhood,json=propertyNeighbourhood,proto3" json:"property_neighbourhood,omitempty"`
	PropertyImages          []*PropertyImages        `protobuf:"bytes,22,rep,name=property_images,json=propertyImages,proto3" json:"property_images,omitempty"`
	VideoPreview            string                   `protobuf:"bytes,23,opt,name=video_preview,json=videoPreview,proto3" json:"video_preview,omitempty"`
	PropertyId              string                   `protobuf:"bytes,24,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	IsPropertyAvailable     bool                     `protobuf:"varint,25,opt,name=is_property_available,json=isPropertyAvailable,proto3" json:"is_property_available,omitempty"`
	IsPropertyOnHold        bool                     `protobuf:"varint,26,opt,name=is_property_on_hold,json=isPropertyOnHold,proto3" json:"is_property_on_hold,omitempty"`
	PropertyIsHeldBy        string                   `protobuf:"bytes,27,opt,name=property_is_held_by,json=propertyIsHeldBy,proto3" json:"property_is_held_by,omitempty"`
	LeaseTerms              string                   `protobuf:"bytes,28,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{11}
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *Property) GetPropertyTypeText() string {
	if x != nil {
		return x.PropertyTypeText
	}
	return ""
}

func (x *Property) GetPropertyReference() string {
	if x != nil {
		return x.PropertyReference
	}
	return ""
}

func (x *Property) GetLocationText() string {
	if x != nil {
		return x.LocationText
	}
	return ""
}

func (x *Property) GetLocationCoordinatesLat() float64 {
	if x != nil {
		return x.LocationCoordinatesLat
	}
	return 0
}

func (x *Property) GetLocationCoordinatesLong() float64 {
	if x != nil {
		return x.LocationCoordinatesLong
	}
	return 0
}

func (x *Property) GetRentPrice() float64 {
	if x != nil {
		return x.RentPrice
	}
	return 0
}

func (x *Property) GetServiceChargeFee() float64 {
	if x != nil {
		return x.ServiceChargeFee
	}
	return 0
}

func (x *Property) GetAgentFee() float64 {
	if x != nil {
		return x.AgentFee
	}
	return 0
}

func (x *Property) GetLegalFee() float64 {
	if x != nil {
		return x.LegalFee
	}
	return 0
}

func (x *Property) GetRentalDepositPeriod() int32 {
	if x != nil {
		return x.RentalDepositPeriod
	}
	return 0
}

func (x *Property) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Property) GetFeatureBedrooms() int32 {
	if x != nil {
		return x.FeatureBedrooms
	}
	return 0
}

func (x *Property) GetFeatureBathrooms() int32 {
	if x != nil {
		return x.FeatureBathrooms
	}
	return 0
}

func (x *Property) GetFeatureSize() int32 {
	if x != nil {
		return x.FeatureSize
	}
	return 0
}

func (x *Property) GetCoverPhoto() string {
	if x != nil {
		return x.CoverPhoto
	}
	return ""
}

func (x *Property) GetPropertyAbout() *structpb.Struct {
	if x != nil {
		return x.PropertyAbout
	}
	return nil
}

func (x *Property) GetPropertyManagement() *structpb.Struct {
	if x != nil {
		return x.PropertyManagement
	}
	return nil
}

func (x *Property) GetPropertyNearbySchool() []*PropertyNearbySchool {
	if x != nil {
		return x.PropertyNearbySchool
	}
	return nil
}

func (x *Property) GetPropertyNeighbourhood() []*PropertyNeighbourhood {
	if x != nil {
		return x.PropertyNeighbourhood
	}
	return nil
}

func (x *Property) GetPropertyImages() []*PropertyImages {
	if x != nil {
		return x.PropertyImages
	}
	return nil
}

func (x *Property) GetVideoPreview() string {
	if x != nil {
		return x.VideoPreview
	}
	return ""
}

func (x *Property) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *Property) GetIsPropertyAvailable() bool {
	if x != nil {
		return x.IsPropertyAvailable
	}
	return false
}

func (x *Property) GetIsPropertyOnHold() bool {
	if x != nil {
		return x.IsPropertyOnHold
	}
	return false
}

func (x *Property) GetPropertyIsHeldBy() string {
	if x != nil {
		return x.PropertyIsHeldBy
	}
	return ""
}

func (x *Property) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

type AddUserPropertyPreferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomQty      int32   `protobuf:"varint,1,opt,name=room_qty,json=roomQty,proto3" json:"room_qty,omitempty"`
	BathroomQty  int32   `protobuf:"varint,2,opt,name=bathroom_qty,json=bathroomQty,proto3" json:"bathroom_qty,omitempty"`
	PropertyType int32   `protobuf:"varint,3,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	MinimumRent  float64 `protobuf:"fixed64,4,opt,name=minimum_rent,json=minimumRent,proto3" json:"minimum_rent,omitempty"`
	MaximumRent  float64 `protobuf:"fixed64,5,opt,name=maximum_rent,json=maximumRent,proto3" json:"maximum_rent,omitempty"`
	UserId       string  `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddUserPropertyPreferenceRequest) Reset() {
	*x = AddUserPropertyPreferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserPropertyPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserPropertyPreferenceRequest) ProtoMessage() {}

func (x *AddUserPropertyPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserPropertyPreferenceRequest.ProtoReflect.Descriptor instead.
func (*AddUserPropertyPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{12}
}

func (x *AddUserPropertyPreferenceRequest) GetRoomQty() int32 {
	if x != nil {
		return x.RoomQty
	}
	return 0
}

func (x *AddUserPropertyPreferenceRequest) GetBathroomQty() int32 {
	if x != nil {
		return x.BathroomQty
	}
	return 0
}

func (x *AddUserPropertyPreferenceRequest) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *AddUserPropertyPreferenceRequest) GetMinimumRent() float64 {
	if x != nil {
		return x.MinimumRent
	}
	return 0
}

func (x *AddUserPropertyPreferenceRequest) GetMaximumRent() float64 {
	if x != nil {
		return x.MaximumRent
	}
	return 0
}

func (x *AddUserPropertyPreferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddUserPropertyPreferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddUserPropertyPreferenceResponse) Reset() {
	*x = AddUserPropertyPreferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserPropertyPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserPropertyPreferenceResponse) ProtoMessage() {}

func (x *AddUserPropertyPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserPropertyPreferenceResponse.ProtoReflect.Descriptor instead.
func (*AddUserPropertyPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{13}
}

func (x *AddUserPropertyPreferenceResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddUserPropertyPreferenceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddUserPropertyPreferenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddUserSavedPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *AddUserSavedPropertyRequest) Reset() {
	*x = AddUserSavedPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserSavedPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserSavedPropertyRequest) ProtoMessage() {}

func (x *AddUserSavedPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserSavedPropertyRequest.ProtoReflect.Descriptor instead.
func (*AddUserSavedPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{14}
}

func (x *AddUserSavedPropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserSavedPropertyRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type AddUserSavedPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddUserSavedPropertyResponse) Reset() {
	*x = AddUserSavedPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserSavedPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserSavedPropertyResponse) ProtoMessage() {}

func (x *AddUserSavedPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserSavedPropertyResponse.ProtoReflect.Descriptor instead.
func (*AddUserSavedPropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{15}
}

func (x *AddUserSavedPropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddUserSavedPropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *AddUserSavedPropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UserSavedProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *UserSavedProperty) Reset() {
	*x = UserSavedProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSavedProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSavedProperty) ProtoMessage() {}

func (x *UserSavedProperty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSavedProperty.ProtoReflect.Descriptor instead.
func (*UserSavedProperty) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{16}
}

func (x *UserSavedProperty) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSavedProperty) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type GetUserSavedPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserSavedPropertiesRequest) Reset() {
	*x = GetUserSavedPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSavedPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSavedPropertiesRequest) ProtoMessage() {}

func (x *GetUserSavedPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSavedPropertiesRequest.ProtoReflect.Descriptor instead.
func (*GetUserSavedPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserSavedPropertiesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserSavedPropertiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int64       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error      string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message    string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Properties []*Property `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *GetUserSavedPropertiesResponse) Reset() {
	*x = GetUserSavedPropertiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSavedPropertiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSavedPropertiesResponse) ProtoMessage() {}

func (x *GetUserSavedPropertiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSavedPropertiesResponse.ProtoReflect.Descriptor instead.
func (*GetUserSavedPropertiesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserSavedPropertiesResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserSavedPropertiesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetUserSavedPropertiesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserSavedPropertiesResponse) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

type HoldPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *HoldPropertyRequest) Reset() {
	*x = HoldPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldPropertyRequest) ProtoMessage() {}

func (x *HoldPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldPropertyRequest.ProtoReflect.Descriptor instead.
func (*HoldPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{19}
}

func (x *HoldPropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HoldPropertyRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type HoldPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HoldPropertyResponse) Reset() {
	*x = HoldPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldPropertyResponse) ProtoMessage() {}

func (x *HoldPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldPropertyResponse.ProtoReflect.Descriptor instead.
func (*HoldPropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{20}
}

func (x *HoldPropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HoldPropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HoldPropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReleasePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyId string `protobuf:"bytes,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
}

func (x *ReleasePropertyRequest) Reset() {
	*x = ReleasePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePropertyRequest) ProtoMessage() {}

func (x *ReleasePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePropertyRequest.ProtoReflect.Descriptor instead.
func (*ReleasePropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{21}
}

func (x *ReleasePropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReleasePropertyRequest) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type ReleasePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReleasePropertyResponse) Reset() {
	*x = ReleasePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePropertyResponse) ProtoMessage() {}

func (x *ReleasePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePropertyResponse.ProtoReflect.Descriptor instead.
func (*ReleasePropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{22}
}

func (x *ReleasePropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReleasePropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ReleasePropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RoommateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age         int32  `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	Independent bool   `protobuf:"varint,2,opt,name=independent,proto3" json:"independent,omitempty"`
	Smoker      bool   `protobuf:"varint,3,opt,name=smoker,proto3" json:"smoker,omitempty"`
	Pet         bool   `protobuf:"varint,4,opt,name=pet,proto3" json:"pet,omitempty"`
	Student     bool   `protobuf:"varint,5,opt,name=student,proto3" json:"student,omitempty"`
	Employed    bool   `protobuf:"varint,6,opt,name=employed,proto3" json:"employed,omitempty"`
	MusicGenre  string `protobuf:"bytes,7,opt,name=music_genre,json=musicGenre,proto3" json:"music_genre,omitempty"`
	MovieGenre  string `protobuf:"bytes,8,opt,name=movie_genre,json=movieGenre,proto3" json:"movie_genre,omitempty"`
	Sport       string `protobuf:"bytes,9,opt,name=sport,proto3" json:"sport,omitempty"`
	Religion    string `protobuf:"bytes,10,opt,name=religion,proto3" json:"religion,omitempty"`
	Allergies   string `protobuf:"bytes,11,opt,name=allergies,proto3" json:"allergies,omitempty"`
}

func (x *RoommateFilter) Reset() {
	*x = RoommateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoommateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoommateFilter) ProtoMessage() {}

func (x *RoommateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoommateFilter.ProtoReflect.Descriptor instead.
func (*RoommateFilter) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{23}
}

func (x *RoommateFilter) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *RoommateFilter) GetIndependent() bool {
	if x != nil {
		return x.Independent
	}
	return false
}

func (x *RoommateFilter) GetSmoker() bool {
	if x != nil {
		return x.Smoker
	}
	return false
}

func (x *RoommateFilter) GetPet() bool {
	if x != nil {
		return x.Pet
	}
	return false
}

func (x *RoommateFilter) GetStudent() bool {
	if x != nil {
		return x.Student
	}
	return false
}

func (x *RoommateFilter) GetEmployed() bool {
	if x != nil {
		return x.Employed
	}
	return false
}

func (x *RoommateFilter) GetMusicGenre() string {
	if x != nil {
		return x.MusicGenre
	}
	return ""
}

func (x *RoommateFilter) GetMovieGenre() string {
	if x != nil {
		return x.MovieGenre
	}
	return ""
}

func (x *RoommateFilter) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *RoommateFilter) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *RoommateFilter) GetAllergies() string {
	if x != nil {
		return x.Allergies
	}
	return ""
}

type SearchPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PropertyType         int32           `protobuf:"varint,2,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	FeatureBedrooms      int32           `protobuf:"varint,3,opt,name=feature_bedrooms,json=featureBedrooms,proto3" json:"feature_bedrooms,omitempty"`
	FeatureBathrooms     int32           `protobuf:"varint,4,opt,name=feature_bathrooms,json=featureBathrooms,proto3" json:"feature_bathrooms,omitempty"`
	MinimumRentPrice     int32           `protobuf:"varint,5,opt,name=minimumRentPrice,proto3" json:"minimumRentPrice,omitempty"`
	MaximumRentPrice     int32           `protobuf:"varint,6,opt,name=maximumRentPrice,proto3" json:"maximumRentPrice,omitempty"`
	FeatureSize          int32           `protobuf:"varint,7,opt,name=feature_size,json=featureSize,proto3" json:"feature_size,omitempty"`
	LocationText         string          `protobuf:"bytes,8,opt,name=location_text,json=locationText,proto3" json:"location_text,omitempty"`
	HostelRoomSize       string          `protobuf:"bytes,9,opt,name=hostel_room_size,json=hostelRoomSize,proto3" json:"hostel_room_size,omitempty"`
	HostelResidentGender string          `protobuf:"bytes,10,opt,name=hostel_resident_gender,json=hostelResidentGender,proto3" json:"hostel_resident_gender,omitempty"`
	RoommateFilter       *RoommateFilter `protobuf:"bytes,11,opt,name=roommate_filter,json=roommateFilter,proto3" json:"roommate_filter,omitempty"`
}

func (x *SearchPropertyRequest) Reset() {
	*x = SearchPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPropertyRequest) ProtoMessage() {}

func (x *SearchPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPropertyRequest.ProtoReflect.Descriptor instead.
func (*SearchPropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{24}
}

func (x *SearchPropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchPropertyRequest) GetPropertyType() int32 {
	if x != nil {
		return x.PropertyType
	}
	return 0
}

func (x *SearchPropertyRequest) GetFeatureBedrooms() int32 {
	if x != nil {
		return x.FeatureBedrooms
	}
	return 0
}

func (x *SearchPropertyRequest) GetFeatureBathrooms() int32 {
	if x != nil {
		return x.FeatureBathrooms
	}
	return 0
}

func (x *SearchPropertyRequest) GetMinimumRentPrice() int32 {
	if x != nil {
		return x.MinimumRentPrice
	}
	return 0
}

func (x *SearchPropertyRequest) GetMaximumRentPrice() int32 {
	if x != nil {
		return x.MaximumRentPrice
	}
	return 0
}

func (x *SearchPropertyRequest) GetFeatureSize() int32 {
	if x != nil {
		return x.FeatureSize
	}
	return 0
}

func (x *SearchPropertyRequest) GetLocationText() string {
	if x != nil {
		return x.LocationText
	}
	return ""
}

func (x *SearchPropertyRequest) GetHostelRoomSize() string {
	if x != nil {
		return x.HostelRoomSize
	}
	return ""
}

func (x *SearchPropertyRequest) GetHostelResidentGender() string {
	if x != nil {
		return x.HostelResidentGender
	}
	return ""
}

func (x *SearchPropertyRequest) GetRoommateFilter() *RoommateFilter {
	if x != nil {
		return x.RoommateFilter
	}
	return nil
}

type SearchPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             int64       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error              string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message            string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Properties         []*Property `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty"`
	PropertySuggestion *Property   `protobuf:"bytes,5,opt,name=property_suggestion,json=propertySuggestion,proto3" json:"property_suggestion,omitempty"`
}

func (x *SearchPropertyResponse) Reset() {
	*x = SearchPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPropertyResponse) ProtoMessage() {}

func (x *SearchPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPropertyResponse.ProtoReflect.Descriptor instead.
func (*SearchPropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{25}
}

func (x *SearchPropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchPropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SearchPropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchPropertyResponse) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SearchPropertyResponse) GetPropertySuggestion() *Property {
	if x != nil {
		return x.PropertySuggestion
	}
	return nil
}

type GetPropertyCapacityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_Id string `protobuf:"bytes,1,opt,name=user_Id,json=userId,proto3" json:"user_Id,omitempty"`
}

func (x *GetPropertyCapacityRequest) Reset() {
	*x = GetPropertyCapacityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyCapacityRequest) ProtoMessage() {}

func (x *GetPropertyCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyCapacityRequest.ProtoReflect.Descriptor instead.
func (*GetPropertyCapacityRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{26}
}

func (x *GetPropertyCapacityRequest) GetUser_Id() string {
	if x != nil {
		return x.User_Id
	}
	return ""
}

type GetPropertyCapacityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPropertyCapacityResponse) Reset() {
	*x = GetPropertyCapacityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyCapacityResponse) ProtoMessage() {}

func (x *GetPropertyCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyCapacityResponse.ProtoReflect.Descriptor instead.
func (*GetPropertyCapacityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{27}
}

func (x *GetPropertyCapacityResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPropertyCapacityResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetPropertyCapacityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPropertyCapacityResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAllAvailableLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllAvailableLocationsRequest) Reset() {
	*x = GetAllAvailableLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailableLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailableLocationsRequest) ProtoMessage() {}

func (x *GetAllAvailableLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailableLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAvailableLocationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{28}
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Abbreviation string `protobuf:"bytes,2,opt,name=abbreviation,proto3" json:"abbreviation,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{29}
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetAbbreviation() string {
	if x != nil {
		return x.Abbreviation
	}
	return ""
}

func (x *Location) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetAllAvailableLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error     string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message   string      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Locations []*Location `protobuf:"bytes,4,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetAllAvailableLocationsResponse) Reset() {
	*x = GetAllAvailableLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailableLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailableLocationsResponse) ProtoMessage() {}

func (x *GetAllAvailableLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailableLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAvailableLocationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllAvailableLocationsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAllAvailableLocationsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetAllAvailableLocationsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllAvailableLocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type DeletePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeletePropertyRequest) Reset() {
	*x = DeletePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyRequest) ProtoMessage() {}

func (x *DeletePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyRequest.ProtoReflect.Descriptor instead.
func (*DeletePropertyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{31}
}

func (x *DeletePropertyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeletePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePropertyResponse) Reset() {
	*x = DeletePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyResponse) ProtoMessage() {}

func (x *DeletePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyResponse.ProtoReflect.Descriptor instead.
func (*DeletePropertyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{32}
}

func (x *DeletePropertyResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeletePropertyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeletePropertyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeletePropertyHeldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeletePropertyHeldRequest) Reset() {
	*x = DeletePropertyHeldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyHeldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyHeldRequest) ProtoMessage() {}

func (x *DeletePropertyHeldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyHeldRequest.ProtoReflect.Descriptor instead.
func (*DeletePropertyHeldRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{33}
}

func (x *DeletePropertyHeldRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeletePropertyHeldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePropertyHeldResponse) Reset() {
	*x = DeletePropertyHeldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyHeldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyHeldResponse) ProtoMessage() {}

func (x *DeletePropertyHeldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyHeldResponse.ProtoReflect.Descriptor instead.
func (*DeletePropertyHeldResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{34}
}

func (x *DeletePropertyHeldResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeletePropertyHeldResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeletePropertyHeldResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteUserPropertyPreferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteUserPropertyPreferenceRequest) Reset() {
	*x = DeleteUserPropertyPreferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserPropertyPreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserPropertyPreferenceRequest) ProtoMessage() {}

func (x *DeleteUserPropertyPreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserPropertyPreferenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserPropertyPreferenceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteUserPropertyPreferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserPropertyPreferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteUserPropertyPreferenceResponse) Reset() {
	*x = DeleteUserPropertyPreferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_property_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserPropertyPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserPropertyPreferenceResponse) ProtoMessage() {}

func (x *DeleteUserPropertyPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_property_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserPropertyPreferenceResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserPropertyPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_property_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteUserPropertyPreferenceResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteUserPropertyPreferenceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeleteUserPropertyPreferenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_pb_property_proto protoreflect.FileDescriptor

var file_pkg_pb_property_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa2, 0x08, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x12, 0x3a,
	0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61,
	0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x62,
	0x6f, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x14, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x12, 0x56, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72,
	0x68, 0x6f, 0x6f, 0x64, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65,
	0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54,
	0x65, 0x72, 0x6d, 0x73, 0x22, 0x6d, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x58, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xab, 0x0a, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x46, 0x65,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x72,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x68, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x62, 0x6f,
	0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x62, 0x6f, 0x75, 0x74,
	0x12, 0x48, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65,
	0x61, 0x72, 0x62, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x12, 0x56, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f,
	0x64, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4f, 0x6e,
	0x48, 0x6f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x73, 0x48, 0x65, 0x6c,
	0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54,
	0x65, 0x72, 0x6d, 0x73, 0x22, 0x20, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01,
	0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xa8, 0x0a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x74, 0x12,
	0x3a, 0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x65, 0x64, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62,
	0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41,
	0x62, 0x6f, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x54,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x62,
	0x79, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x14,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x56, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75,
	0x72, 0x68, 0x6f, 0x6f, 0x64, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x68, 0x6f, 0x6f, 0x64, 0x12, 0x41, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4f, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49,
	0x73, 0x48, 0x65, 0x6c, 0x64, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x68,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x52, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x6b, 0x0a, 0x21, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x1b,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x13, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x14, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x17, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x02,
	0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6d, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x6d, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x67, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x67, 0x69, 0x65, 0x73, 0x22, 0xf0, 0x03, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x74,
	0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x6c,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x6d,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x6d,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x43, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x62, 0x72,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48,
	0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x23, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x24, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x80, 0x0a, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76,
	0x0a, 0x19, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0c, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x55, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x65, 0x6c, 0x64, 0x12, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x65, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_property_proto_rawDescOnce sync.Once
	file_pkg_pb_property_proto_rawDescData = file_pkg_pb_property_proto_rawDesc
)

func file_pkg_pb_property_proto_rawDescGZIP() []byte {
	file_pkg_pb_property_proto_rawDescOnce.Do(func() {
		file_pkg_pb_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_property_proto_rawDescData)
	})
	return file_pkg_pb_property_proto_rawDescData
}

var file_pkg_pb_property_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_pkg_pb_property_proto_goTypes = []interface{}{
	(*AddPropertyRequest)(nil),                   // 0: property.AddPropertyRequest
	(*AddPropertyResponse)(nil),                  // 1: property.AddPropertyResponse
	(*Pagination)(nil),                           // 2: property.Pagination
	(*ListPropertyRequest)(nil),                  // 3: property.ListPropertyRequest
	(*ListPropertyResponse)(nil),                 // 4: property.ListPropertyResponse
	(*FindOneData)(nil),                          // 5: property.FindOneData
	(*FindOneRequest)(nil),                       // 6: property.FindOneRequest
	(*FindOneResponse)(nil),                      // 7: property.FindOneResponse
	(*PropertyNearbySchool)(nil),                 // 8: property.PropertyNearbySchool
	(*PropertyNeighbourhood)(nil),                // 9: property.PropertyNeighbourhood
	(*PropertyImages)(nil),                       // 10: property.PropertyImages
	(*Property)(nil),                             // 11: property.Property
	(*AddUserPropertyPreferenceRequest)(nil),     // 12: property.AddUserPropertyPreferenceRequest
	(*AddUserPropertyPreferenceResponse)(nil),    // 13: property.AddUserPropertyPreferenceResponse
	(*AddUserSavedPropertyRequest)(nil),          // 14: property.AddUserSavedPropertyRequest
	(*AddUserSavedPropertyResponse)(nil),         // 15: property.AddUserSavedPropertyResponse
	(*UserSavedProperty)(nil),                    // 16: property.UserSavedProperty
	(*GetUserSavedPropertiesRequest)(nil),        // 17: property.GetUserSavedPropertiesRequest
	(*GetUserSavedPropertiesResponse)(nil),       // 18: property.GetUserSavedPropertiesResponse
	(*HoldPropertyRequest)(nil),                  // 19: property.HoldPropertyRequest
	(*HoldPropertyResponse)(nil),                 // 20: property.HoldPropertyResponse
	(*ReleasePropertyRequest)(nil),               // 21: property.ReleasePropertyRequest
	(*ReleasePropertyResponse)(nil),              // 22: property.ReleasePropertyResponse
	(*RoommateFilter)(nil),                       // 23: property.RoommateFilter
	(*SearchPropertyRequest)(nil),                // 24: property.SearchPropertyRequest
	(*SearchPropertyResponse)(nil),               // 25: property.SearchPropertyResponse
	(*GetPropertyCapacityRequest)(nil),           // 26: property.GetPropertyCapacityRequest
	(*GetPropertyCapacityResponse)(nil),          // 27: property.GetPropertyCapacityResponse
	(*GetAllAvailableLocationsRequest)(nil),      // 28: property.GetAllAvailableLocationsRequest
	(*Location)(nil),                             // 29: property.Location
	(*GetAllAvailableLocationsResponse)(nil),     // 30: property.GetAllAvailableLocationsResponse
	(*DeletePropertyRequest)(nil),                // 31: property.DeletePropertyRequest
	(*DeletePropertyResponse)(nil),               // 32: property.DeletePropertyResponse
	(*DeletePropertyHeldRequest)(nil),            // 33: property.DeletePropertyHeldRequest
	(*DeletePropertyHeldResponse)(nil),           // 34: property.DeletePropertyHeldResponse
	(*DeleteUserPropertyPreferenceRequest)(nil),  // 35: property.DeleteUserPropertyPreferenceRequest
	(*DeleteUserPropertyPreferenceResponse)(nil), // 36: property.DeleteUserPropertyPreferenceResponse
	(*structpb.Struct)(nil),                      // 37: google.protobuf.Struct
}
var file_pkg_pb_property_proto_depIdxs = []int32{
	37, // 0: property.AddPropertyRequest.property_about:type_name -> google.protobuf.Struct
	37, // 1: property.AddPropertyRequest.property_management:type_name -> google.protobuf.Struct
	8,  // 2: property.AddPropertyRequest.property_nearby_school:type_name -> property.PropertyNearbySchool
	9,  // 3: property.AddPropertyRequest.property_neighbourhood:type_name -> property.PropertyNeighbourhood
	10, // 4: property.AddPropertyRequest.property_images:type_name -> property.PropertyImages
	2,  // 5: property.ListPropertyResponse.pagination:type_name -> property.Pagination
	11, // 6: property.ListPropertyResponse.properties:type_name -> property.Property
	37, // 7: property.FindOneData.property_about:type_name -> google.protobuf.Struct
	37, // 8: property.FindOneData.property_management:type_name -> google.protobuf.Struct
	8,  // 9: property.FindOneData.property_nearby_school:type_name -> property.PropertyNearbySchool
	9,  // 10: property.FindOneData.property_neighbourhood:type_name -> property.PropertyNeighbourhood
	10, // 11: property.FindOneData.property_images:type_name -> property.PropertyImages
	5,  // 12: property.FindOneResponse.data:type_name -> property.FindOneData
	37, // 13: property.Property.property_about:type_name -> google.protobuf.Struct
	37, // 14: property.Property.property_management:type_name -> google.protobuf.Struct
	8,  // 15: property.Property.property_nearby_school:type_name -> property.PropertyNearbySchool
	9,  // 16: property.Property.property_neighbourhood:type_name -> property.PropertyNeighbourhood
	10, // 17: property.Property.property_images:type_name -> property.PropertyImages
	11, // 18: property.GetUserSavedPropertiesResponse.properties:type_name -> property.Property
	23, // 19: property.SearchPropertyRequest.roommate_filter:type_name -> property.RoommateFilter
	11, // 20: property.SearchPropertyResponse.properties:type_name -> property.Property
	11, // 21: property.SearchPropertyResponse.property_suggestion:type_name -> property.Property
	37, // 22: property.GetPropertyCapacityResponse.data:type_name -> google.protobuf.Struct
	29, // 23: property.GetAllAvailableLocationsResponse.locations:type_name -> property.Location
	0,  // 24: property.PropertyService.AddProperty:input_type -> property.AddPropertyRequest
	3,  // 25: property.PropertyService.ListProperty:input_type -> property.ListPropertyRequest
	6,  // 26: property.PropertyService.FindOne:input_type -> property.FindOneRequest
	12, // 27: property.PropertyService.AddUserPropertyPreference:input_type -> property.AddUserPropertyPreferenceRequest
	14, // 28: property.PropertyService.AddUserSavedProperty:input_type -> property.AddUserSavedPropertyRequest
	17, // 29: property.PropertyService.GetUserSavedProperties:input_type -> property.GetUserSavedPropertiesRequest
	19, // 30: property.PropertyService.HoldProperty:input_type -> property.HoldPropertyRequest
	24, // 31: property.PropertyService.SearchProperty:input_type -> property.SearchPropertyRequest
	26, // 32: property.PropertyService.GetPropertyCapacity:input_type -> property.GetPropertyCapacityRequest
	28, // 33: property.PropertyService.GetAllAvailableLocations:input_type -> property.GetAllAvailableLocationsRequest
	31, // 34: property.PropertyService.DeleteProperty:input_type -> property.DeletePropertyRequest
	33, // 35: property.PropertyService.DeletePropertyHeld:input_type -> property.DeletePropertyHeldRequest
	35, // 36: property.PropertyService.DeleteUserPropertyPreference:input_type -> property.DeleteUserPropertyPreferenceRequest
	1,  // 37: property.PropertyService.AddProperty:output_type -> property.AddPropertyResponse
	4,  // 38: property.PropertyService.ListProperty:output_type -> property.ListPropertyResponse
	7,  // 39: property.PropertyService.FindOne:output_type -> property.FindOneResponse
	13, // 40: property.PropertyService.AddUserPropertyPreference:output_type -> property.AddUserPropertyPreferenceResponse
	15, // 41: property.PropertyService.AddUserSavedProperty:output_type -> property.AddUserSavedPropertyResponse
	18, // 42: property.PropertyService.GetUserSavedProperties:output_type -> property.GetUserSavedPropertiesResponse
	20, // 43: property.PropertyService.HoldProperty:output_type -> property.HoldPropertyResponse
	25, // 44: property.PropertyService.SearchProperty:output_type -> property.SearchPropertyResponse
	27, // 45: property.PropertyService.GetPropertyCapacity:output_type -> property.GetPropertyCapacityResponse
	30, // 46: property.PropertyService.GetAllAvailableLocations:output_type -> property.GetAllAvailableLocationsResponse
	32, // 47: property.PropertyService.DeleteProperty:output_type -> property.DeletePropertyResponse
	34, // 48: property.PropertyService.DeletePropertyHeld:output_type -> property.DeletePropertyHeldResponse
	36, // 49: property.PropertyService.DeleteUserPropertyPreference:output_type -> property.DeleteUserPropertyPreferenceResponse
	37, // [37:50] is the sub-list for method output_type
	24, // [24:37] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pkg_pb_property_proto_init() }
func file_pkg_pb_property_proto_init() {
	if File_pkg_pb_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyNearbySchool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyNeighbourhood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyImages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserPropertyPreferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserPropertyPreferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserSavedPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserSavedPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSavedProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSavedPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSavedPropertiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HoldPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HoldPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoommateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyCapacityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyCapacityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailableLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailableLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyHeldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyHeldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserPropertyPreferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_property_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserPropertyPreferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_property_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_property_proto_goTypes,
		DependencyIndexes: file_pkg_pb_property_proto_depIdxs,
		MessageInfos:      file_pkg_pb_property_proto_msgTypes,
	}.Build()
	File_pkg_pb_property_proto = out.File
	file_pkg_pb_property_proto_rawDesc = nil
	file_pkg_pb_property_proto_goTypes = nil
	file_pkg_pb_property_proto_depIdxs = nil
}
